basePath: /api/v1
definitions:
  models.Song:
    properties:
      group_name:
        type: string
      id:
        type: integer
      link:
        type: string
      release_date:
        type: string
      song_name:
        type: string
      text:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for Music-Library Application
  title: spotify API
  version: 1.0.0
paths:
  /library:
    get:
      description: get songs using the query's parameters for paginating and filtering
      parameters:
      - description: The query's parameters for paginating and filtering
        in: query
        name: limit
        required: true
        type: integer
      - description: The query's parameters for paginating and filtering
        in: query
        name: offset
        required: true
        type: integer
      - description: The query's parameters for paginating and filtering
        in: query
        name: id
        required: true
        type: integer
      - description: The query's parameters for paginating and filtering
        in: query
        name: group_name
        required: true
        type: string
      - description: The query's parameters for paginating and filtering
        in: query
        name: song_name
        required: true
        type: string
      - description: The query's parameters for paginating and filtering
        in: query
        name: release_date
        required: true
        type: string
      - description: The query's parameters for paginating and filtering
        in: query
        name: text
        required: true
        type: string
      - description: The query's parameters for paginating and filtering
        in: query
        name: link
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get songs
      tags:
      - get songs
    post:
      consumes:
      - application/json
      description: create song
      parameters:
      - description: The song's info
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create song
      tags:
      - create
  /library/:id:
    delete:
      description: Delete song
      parameters:
      - description: The song's id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete song
      tags:
      - Delete
    get:
      description: get song by id
      parameters:
      - description: The song's id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get song
      tags:
      - get song
    patch:
      consumes:
      - application/json
      description: Update song
      parameters:
      - description: The song's id
        in: path
        name: id
        required: true
        type: integer
      - description: The song's info
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update song
      tags:
      - Update
  /library/:id/text:
    get:
      description: get the song's text using the query's parameters for paginating
        and filtering
      parameters:
      - description: The query's parameters for paginating and filtering
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get the song's text
      tags:
      - get the song's text
swagger: "2.0"
